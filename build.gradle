plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'me.champeau.jmh' version '0.7.2'
}

dependencies {
    implementation subprojects
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'me.champeau.jmh'

    compileJava.options.encoding = compileTestJava.options.encoding = "UTF-8"
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_18

    project.ext.lwjglVersion = "3.3.3"
    project.ext.lwjglNatives = "natives-windows"
    project.ext.jomlVersion = "1.10.5"

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.34'
        annotationProcessor 'org.projectlombok:lombok:1.18.34'

        testCompileOnly 'org.projectlombok:lombok:1.18.34'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.3'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.3'
        testImplementation 'org.assertj:assertj-core:3.26.3'

        jmh 'org.openjdk.jmh:jmh-core:1.37'
        jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
        jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    }

    configurations.configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    test {
        useJUnitPlatform()
    }

    bootJar {
        enabled = false
    }
}

import com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer

shadowJar {
    // Required for Spring
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories']
        mergeStrategy = "append"
    }
}

bootJar {
    enabled = false
}

jar {
    manifest {
        attributes 'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '),
                'Main-Class': 'net.bfsr.client.launch.LWJGL3Main',
                'Multi-Release': true//log4j2 workaround
    }
}